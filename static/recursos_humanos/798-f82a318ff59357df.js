"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[798],{57798:(e,r,o)=>{o.d(r,{$G:()=>R,$n:()=>y,Ad:()=>Q,BE:()=>k,Bi:()=>t,C:()=>i,Cm:()=>w,DX:()=>v,Dk:()=>x,EO:()=>T,ER:()=>B,GP:()=>O,HP:()=>_,KX:()=>c,Lr:()=>j,Ly:()=>C,O0:()=>E,QW:()=>S,Qm:()=>J,SG:()=>ee,T8:()=>n,Tm:()=>I,Vp:()=>a,WT:()=>Y,X6:()=>u,X9:()=>er,XZ:()=>p,Xn:()=>f,Xr:()=>H,ZI:()=>d,aJ:()=>z,az:()=>N,bC:()=>s,bD:()=>A,bi:()=>F,h3:()=>X,hc:()=>h,hp:()=>U,i1:()=>$,i9:()=>D,j$:()=>W,j8:()=>l,kI:()=>K,mA:()=>V,ns:()=>q,pf:()=>g,qK:()=>b,sH:()=>M,st:()=>L,tn:()=>m,tt:()=>Z,wv:()=>P,yA:()=>G});let t=async(e,r)=>{try{let o=await fetch("http://127.0.0.1:8000/api/login/",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:e,password:r})});if(!o.ok)throw Error("Error en la autenticaci\xf3n");let t=await o.json();return 200===o.status&&(localStorage.setItem("refreshToken",t.tokens.refresh),localStorage.setItem("accessToken",t.tokens.access),localStorage.setItem("usuarioLogeado",JSON.stringify(t.empleado))),t.empleado}catch(e){throw console.error("Error en el servicio de login:",e),e}},a=async(e,r)=>{try{let o=localStorage.getItem("accessToken"),t=await fetch("http://127.0.0.1:8000/api/change-password/",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(o)},body:JSON.stringify({old_password:e,new_password:r})});if(!t.ok)throw Error("Error al cambiar la contrase\xf1a");return await t.json()}catch(e){throw console.error("Error en el servicio de cambio de contrase\xf1a:",e),e}},c=async()=>{try{let e=localStorage.getItem("refreshToken"),r=localStorage.getItem("accessToken");if(!e||!r)throw Error("No tokens found");localStorage.removeItem("accessToken"),localStorage.removeItem("refreshToken"),localStorage.removeItem("usuarioLogeado")}catch(e){console.error("Error al cerrar sesi\xf3n:",e)}},n=async()=>{let e=localStorage.getItem("accessToken");try{let r=await fetch("http://127.0.0.1:8000/api/empleados/",{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(e)}});if(!r.ok)throw Error("Error al obtener los empleados");return await r.json()}catch(e){throw console.error("Error en el servicio de obtener empleados:",e),e}},i=async()=>{let e=localStorage.getItem("accessToken");try{let r=await fetch("http://127.0.0.1:8000/api/tareas/",{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(e)}});if(!r.ok)throw Error("Error al obtener los empleados");return await r.json()}catch(e){throw console.error("Error en el servicio de obtener empleados:",e),e}},s=async e=>{let r=localStorage.getItem("accessToken");try{let o=await fetch("http://127.0.0.1:8000/api/tareas/empleado/".concat(e,"/"),{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(r)}});if(!o.ok)throw Error("Error al obtener las tareas del empleado");return await o.json()}catch(e){throw console.error("Error en el servicio de obtener tareas del empleado:",e),e}},l=async()=>{let e=localStorage.getItem("accessToken");console.log("Access Token:",e);try{let r=await fetch("http://127.0.0.1:8000/api/areas/",{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(e)}});if(!r.ok)throw Error("Error al obtener las \xe1reas");return await r.json()}catch(e){throw console.error("Error en el servicio de obtener \xe1reas:",e),e}},h=async e=>{let r=localStorage.getItem("accessToken");try{let o=await fetch("http://127.0.0.1:8000/api/empleados/",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(r)},body:JSON.stringify(e)});if(!o.ok)throw Error("Error al agregar el empleado");return console.log("Empleado a\xf1adido correctamente"),await o.json()}catch(e){throw console.error("Error en el servicio de agregar el empleado:",e),e}},p=async e=>{let r=localStorage.getItem("accessToken");try{let o=await fetch("http://127.0.0.1:8000/api/tareas/",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(r)},body:JSON.stringify(e)});if(!o.ok){let e=await o.json();throw Error("Error al agregar la tarea: ".concat(e.message))}return await o.json()}catch(e){throw console.error("Error en el servicio de agregar la tarea:",e),e}},d=async e=>{let r=localStorage.getItem("accessToken");try{let o=await fetch("http://127.0.0.1:8000/api/asignacionestareas/",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(r)},body:JSON.stringify(e)});if(!o.ok){let e=await o.json();throw Error("Error al agregar la tarea: ".concat(e.message))}return await o.json()}catch(e){throw console.error("Error en el servicio de agregar la tarea:",e),e}},y=async(e,r)=>{let o=localStorage.getItem("accessToken");try{let t=await fetch("http://127.0.0.1:8000/api/empleados/".concat(e,"/"),{method:"PUT",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(o)},body:JSON.stringify(r)});if(!t.ok)throw Error("Error al actualizar el empleado");return await t.json()}catch(e){throw console.error("Error en el servicio de actualizar empleado:",e),e}},g=async e=>{let r=localStorage.getItem("accessToken");try{if(!(await fetch("http://127.0.0.1:8000/api/tareas/".concat(e,"/"),{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(r)}})).ok)throw Error("Error al eliminar el rol");return}catch(e){throw console.error("Error en el servicio de eliminar rol:",e),e}},m=async e=>{let r=localStorage.getItem("accessToken");try{if(!(await fetch("http://127.0.0.1:8000/api/empleados/".concat(e,"/"),{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(r)}})).ok)throw Error("Error al eliminar el rol");return}catch(e){throw console.error("Error en el servicio de eliminar rol:",e),e}},E=async()=>{let e=localStorage.getItem("accessToken");try{let r=await fetch("http://127.0.0.1:8000/api/roles/",{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(e)}});if(!r.ok)throw Error("Error al obtener los roles");return await r.json()}catch(e){throw console.error("Error en el servicio de obtener roles:",e),e}},w=async e=>{let r=localStorage.getItem("accessToken");try{let o=await fetch("http://127.0.0.1:8000/api/roles/",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(r)},body:JSON.stringify(e)});if(!o.ok)throw Error("Error al agregar el rol");return await o.json()}catch(e){throw console.error("Error en el servicio de agregar rol:",e),e}},f=async e=>{let r=localStorage.getItem("accessToken");try{let o=await fetch("http://127.0.0.1:8000/api/areas/",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(r)},body:JSON.stringify(e)});if(!o.ok)throw Error("Error al agregar el area");return await o.json()}catch(e){throw console.error("Error en el servicio de agregar area:",e),e}},T=async e=>{let r=localStorage.getItem("accessToken");try{if(!(await fetch("http://127.0.0.1:8000/api/roles/".concat(e,"/"),{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(r)}})).ok)throw Error("Error al eliminar el rol");return}catch(e){throw console.error("Error en el servicio de eliminar rol:",e),e}},u=async e=>{let r=localStorage.getItem("accessToken");try{if(!(await fetch("http://127.0.0.1:8000/api/areas/".concat(e,"/"),{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(r)}})).ok)throw Error("Error al eliminar el \xe1rea");return}catch(e){throw console.error("Error en el servicio de eliminar \xe1rea:",e),e}},k=async(e,r)=>{let o=localStorage.getItem("accessToken");try{let t=await fetch("http://127.0.0.1:8000/api/areas/".concat(e,"/"),{method:"PUT",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(o)},body:JSON.stringify(r)});if(!t.ok)throw Error("Error al actualizar el \xe1rea");return await t.json()}catch(e){throw console.error("Error en el servicio de actualizar \xe1rea:",e),e}},S=async(e,r)=>{let o=localStorage.getItem("accessToken");try{let t=await fetch("http://127.0.0.1:8000/api/tareas/".concat(e,"/"),{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(o)},body:JSON.stringify(r)});if(!t.ok)throw Error("Error al actualizar el \xe1rea");return await t.json()}catch(e){throw console.error("Error en el servicio de actualizar \xe1rea:",e),e}},j=async()=>{let e=localStorage.getItem("accessToken");try{let r=await fetch("http://127.0.0.1:8000/api/asignacionestareas/",{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(e)}});if(!r.ok)throw Error("Error al obtener los roles");return await r.json()}catch(e){throw console.error("Error en el servicio de obtener roles:",e),e}},z=async(e,r)=>{let o=localStorage.getItem("accessToken");try{let t=await fetch("http://127.0.0.1:8000/api/asignacionestareas/".concat(e,"/"),{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(o)},body:JSON.stringify(r)});if(!t.ok)throw Error("Error al actualizar el \xe1rea");return await t.json()}catch(e){throw console.error("Error en el servicio de actualizar \xe1rea:",e),e}},b=async e=>{let r=localStorage.getItem("accessToken");try{if(!(await fetch("http://127.0.0.1:8000/api/asignacionestareas/".concat(e,"/"),{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(r)}})).ok)throw Error("Error al eliminar el proyecto");return{message:"Proyecto eliminado correctamente"}}catch(e){throw console.error("Error en el servicio de eliminar la asignacionTarea:",e),e}},v=async()=>{let e=localStorage.getItem("accessToken");try{let r=await fetch("http://127.0.0.1:8000/api/proyectos/",{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(e)}});if(!r.ok)throw Error("Error al eliminar el proyecto");return await r.json()}catch(e){throw console.error("Error en el servicio de obtener proyectos:",e),e}},C=async e=>{let r=localStorage.getItem("accessToken");try{let o=await fetch("http://127.0.0.1:8000/api/proyectos/",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(r)},body:JSON.stringify(e)});if(!o.ok)throw Error("Error al agregar el proyecto");return await o.json()}catch(e){throw console.error("Error en el servicio de agregar proyecto:",e),e}},I=async(e,r)=>{let o=localStorage.getItem("accessToken");try{let t=await fetch("http://127.0.0.1:8000/api/proyectos/".concat(e,"/"),{method:"PUT",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(o)},body:JSON.stringify(r)});if(!t.ok)throw Error("Error al actualizar el proyecto");return await t.json()}catch(e){throw console.error("Error en el servicio de actualizar proyecto:",e),e}},A=async e=>{let r=localStorage.getItem("accessToken");try{if(!(await fetch("http://127.0.0.1:8000/api/proyectos/".concat(e,"/"),{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(r)}})).ok)throw Error("Error al eliminar el proyecto");return{message:"Proyecto eliminado correctamente"}}catch(e){throw console.error("Error en el servicio de eliminar proyecto:",e),e}},B=async()=>{let e=localStorage.getItem("accessToken");try{let r=await fetch("http://127.0.0.1:8000/api/costos/",{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(e)}});if(!r.ok)throw Error("Error al obtener los costos");return await r.json()}catch(e){throw console.error("Error en el servicio de obtener costos:",e),e}},O=async e=>{let r=localStorage.getItem("accessToken");try{let o=await fetch("http://127.0.0.1:8000/api/costos/",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(r)},body:JSON.stringify(e)});if(!o.ok)throw Error("Error al agregar el costo");return await o.json()}catch(e){throw console.error("Error en el servicio de agregar costo:",e),e}},N=async(e,r)=>{let o=localStorage.getItem("accessToken");try{let t=await fetch("http://127.0.0.1:8000/api/costos/".concat(e,"/"),{method:"PUT",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(o)},body:JSON.stringify(r)});if(!t.ok)throw Error("Error al actualizar el costo");return await t.json()}catch(e){throw console.error("Error en el servicio de actualizar costo:",e),e}},P=async e=>{let r=localStorage.getItem("accessToken");try{if(!(await fetch("http://127.0.0.1:8000/api/costos/".concat(e,"/"),{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(r)}})).ok)throw Error("Error al eliminar el costo");return{message:"Costo eliminado correctamente"}}catch(e){throw console.error("Error en el servicio de eliminar costo:",e),e}},J=async()=>{let e=localStorage.getItem("accessToken");try{let r=await fetch("http://127.0.0.1:8000/api/facturas/",{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(e)}});if(!r.ok)throw Error("Error al obtener las facturas");return await r.json()}catch(e){throw console.error("Error en el servicio de obtener facturas:",e),e}},G=async e=>{let r=localStorage.getItem("accessToken");try{let o=await fetch("http://127.0.0.1:8000/api/facturas/",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(r)},body:JSON.stringify(e)});if(!o.ok)throw Error("Error al agregar la factura");return await o.json()}catch(e){throw console.error("Error en el servicio de agregar factura:",e),e}},L=async(e,r)=>{let o=localStorage.getItem("accessToken");try{let t=await fetch("http://127.0.0.1:8000/api/facturas/".concat(e,"/"),{method:"PUT",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(o)},body:JSON.stringify(r)});if(!t.ok)throw Error("Error al actualizar la factura");return await t.json()}catch(e){throw console.error("Error en el servicio de actualizar factura:",e),e}},D=async e=>{let r=localStorage.getItem("accessToken");try{if(!(await fetch("http://127.0.0.1:8000/api/facturas/".concat(e,"/"),{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(r)}})).ok)throw Error("Error al eliminar la factura");return{message:"Factura eliminada correctamente"}}catch(e){throw console.error("Error en el servicio de eliminar factura:",e),e}},U=async()=>{let e=localStorage.getItem("accessToken");try{let r=await fetch("http://127.0.0.1:8000/api/proveedores/",{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(e)}});if(!r.ok)throw Error("Error al obtener los proveedores");return await r.json()}catch(e){throw console.error("Error en el servicio de obtener proveedores:",e),e}},X=async()=>{let e=localStorage.getItem("accessToken");try{let r=await fetch("http://127.0.0.1:8000/api/pagos/",{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(e)}});if(!r.ok)throw Error("Error al obtener los pagos");return await r.json()}catch(e){throw console.error("Error en el servicio de obtener pagos:",e),e}},_=async e=>{let r=localStorage.getItem("accessToken");try{let o=await fetch("http://127.0.0.1:8000/api/pagos/",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(r)},body:JSON.stringify(e)});if(!o.ok)throw Error("Error al agregar el pago");return await o.json()}catch(e){throw console.error("Error en el servicio de agregar pago:",e),e}},H=async(e,r)=>{let o=localStorage.getItem("accessToken");try{let t=await fetch("http://127.0.0.1:8000/api/pagos/".concat(e,"/"),{method:"PUT",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(o)},body:JSON.stringify(r)});if(!t.ok)throw Error("Error al actualizar el pago");return await t.json()}catch(e){throw console.error("Error en el servicio de actualizar pago:",e),e}},x=async e=>{let r=localStorage.getItem("accessToken");try{if(!(await fetch("http://127.0.0.1:8000/api/pagos/".concat(e,"/"),{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(r)}})).ok)throw Error("Error al eliminar el pago");return{message:"Pago eliminado correctamente"}}catch(e){throw console.error("Error en el servicio de eliminar pago:",e),e}},R=async()=>{let e=localStorage.getItem("accessToken");try{let r=await fetch("http://127.0.0.1:8000/api/ordenescompra/",{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(e)}});if(!r.ok)throw Error("Error al obtener las \xf3rdenes de compra");return await r.json()}catch(e){throw console.error("Error en el servicio de obtener \xf3rdenes de compra:",e),e}},$=async e=>{let r=localStorage.getItem("accessToken");try{let o=await fetch("http://127.0.0.1:8000/api/ordenescompra/",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(r)},body:JSON.stringify(e)});if(!o.ok)throw Error("Error al agregar la orden de compra");return await o.json()}catch(e){throw console.error("Error en el servicio de agregar orden de compra:",e),e}},K=async(e,r)=>{let o=localStorage.getItem("accessToken");try{let t=await fetch("http://127.0.0.1:8000/api/ordenescompra/".concat(e,"/"),{method:"PUT",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(o)},body:JSON.stringify(r)});if(!t.ok)throw Error("Error al actualizar la orden de compra");return await t.json()}catch(e){throw console.error("Error en el servicio de actualizar orden de compra:",e),e}},Q=async e=>{let r=localStorage.getItem("accessToken");try{if(!(await fetch("http://127.0.0.1:8000/api/ordenescompra/".concat(e,"/"),{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(r)}})).ok)throw Error("Error al eliminar la orden de compra");return{message:"Orden de compra eliminada correctamente"}}catch(e){throw console.error("Error en el servicio de eliminar orden de compra:",e),e}},W=async e=>{let r=localStorage.getItem("accessToken");try{let o=await fetch("http://127.0.0.1:8000/api/metricas-empleado/".concat(e),{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(r)}});if(!o.ok)throw Error("Error al obtener las m\xe9tricas del empleado");return await o.json()}catch(e){throw console.error("Error en el servicio de obtener m\xe9tricas del empleado:",e),e}},Z=async()=>{let e=localStorage.getItem("accessToken");try{let r=await fetch("http://127.0.0.1:8000/api/reporte-tareas-no-entregadas-a-tiempo/",{method:"GET",headers:{"Content-Type":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",Authorization:"Bearer ".concat(e)}});if(!r.ok)throw Error("Error al descargar el reporte");let o=await r.blob(),t=window.URL.createObjectURL(o),a=document.createElement("a");a.href=t,a.download="reporte-tareas-no-entregadas-a-tiempo.xlsx",document.body.appendChild(a),a.click(),a.remove()}catch(e){console.error("Error al descargar el reporte:",e)}},q=async e=>{let r=localStorage.getItem("accessToken");try{let o=await fetch("http://127.0.0.1:8000/api/tareas-pendientes/".concat(e,"/"),{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(r)}});if(!o.ok)throw Error("Error al obtener las tareas pendientes");return await o.json()}catch(e){throw console.error("Error al obtener las tareas pendientes:",e),e}},F=async()=>{let e=localStorage.getItem("accessToken");try{let r=await fetch("http://127.0.0.1:8000/api/notificaciones/",{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(e)}});if(!r.ok)throw Error("Error al obtener las notificaciones");return await r.json()}catch(e){throw console.error("Error en el servicio de obtener notificaciones:",e),e}},V=async e=>{let r=localStorage.getItem("accessToken");try{let o=await fetch("http://127.0.0.1:8000/api/notificaciones/",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(r)},body:JSON.stringify(e)});if(!o.ok)throw Error("Error al agregar la notificaci\xf3n");return await o.json()}catch(e){throw console.error("Error en el servicio de agregar notificaci\xf3n:",e),e}},M=async(e,r)=>{let o=localStorage.getItem("accessToken");try{let t=await fetch("http://127.0.0.1:8000/api/notificaciones/".concat(e,"/"),{method:"PUT",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(o)},body:JSON.stringify(r)});if(!t.ok)throw Error("Error al actualizar la notificaci\xf3n");return await t.json()}catch(e){throw console.error("Error en el servicio de actualizar la notificaci\xf3n:",e),e}},Y=async e=>{let r=localStorage.getItem("accessToken");try{if(!(await fetch("http://127.0.0.1:8000/api/notificaciones/".concat(e,"/"),{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(r)}})).ok)throw Error("Error al eliminar la notificaci\xf3n");return{message:"Notificaci\xf3n eliminada correctamente"}}catch(e){throw console.error("Error en el servicio de eliminar notificaci\xf3n:",e),e}},ee=async(e,r)=>{let o=localStorage.getItem("accessToken");try{let t=await fetch("http://127.0.0.1:8000/api/notificaciones/".concat(e,"/enviar/"),{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(o)},body:JSON.stringify(r)});if(!t.ok)throw Error("Error al enviar la notificaci\xf3n");return await t.json()}catch(e){throw console.error("Error en el servicio de enviar notificaci\xf3n:",e),e}},er=async e=>{let r=localStorage.getItem("accessToken");try{let o=await fetch("http://127.0.0.1:8000/api/notificaciones/empleado/".concat(e,"/"),{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(r)}});if(!o.ok)throw Error("Error al obtener las notificaciones");return await o.json()}catch(e){throw console.error("Error en el servicio de obtener notificaciones:",e),e}}}}]);